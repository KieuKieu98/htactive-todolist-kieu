{"version":3,"sources":["components/context/ColorContext.js","components/hoc/withApp.js","components/Logo.js","components/SignOut.js","components/HeaderTitle.js","components/Header.js","components/Button.js","components/Content.js","views/Login.js","components/context/TodoContext.js","components/hoc/withTodo.js","components/Todo/TodoForm.js","components/Todo/TodoItem.js","components/Todo/TodoList.js","components/ContentTodolist.js","views/Home.js","components/Loader.js","components/context/TodoProvider.js","App.js","serviceWorker.js","index.js","components/context/AppProvider.js"],"names":["ColorContext","React","createContext","withApp","Component","props","context","useContext","react_default","a","createElement","Object","assign","className","onClick","changeColor","changePage","HeaderTitle","page","components_SignOut","components_Logo","Button","_useContext","colorBtn","style","backgroundColor","type","value","Content","_useState","useState","socials","slicedToArray","map","social","key","views_Login","components_Header","components_Content","TodoContext","withTodo","_useState2","setValue","textInput","createRef","useEffect","current","focus","onSubmit","event","preventDefault","addTodo","name","ref","placeholder","onChange","target","_React$useState","todo","text","_React$useState2","_props$todo","id","done","isEdited","markTodoDone","removeTodo","editTodo","closeTodo","editTodoList","defaultValue","color","textDecoration","window","confirm","filter","updateTodoToShow","todos","t","Todo_TodoItem","ContentTodolist","Todo_TodoForm","Todo_TodoList","Home","Loader","API","TodoProvider","setTodo","_useState3","_useState4","todoToShow","setTodoShow","_useState5","_useState6","isLoading","setLoading","_ref","asyncToGenerator","regenerator_default","mark","_callee","doneTodo","res","wrap","_context","prev","next","axios","put","concat","sent","data","objectSpread","stop","_x","_x2","apply","this","arguments","_ref2","_callee2","filteredArray","_context2","delete","item","_x3","_ref3","_callee3","_context3","_x4","_x5","_fetchData","_callee4","_context4","get","sort","b","fetchData","_ref4","_callee5","_context5","post","toConsumableArray","_x6","context_TodoContext","Provider","getFilterTodo","s","children","Boolean","location","hostname","match","ReactDOM","render","setcolorBtn","colorBlack","setColor","context_ColorContext","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mNAGeA,eADMC,IAAMC,iBCEZC,EAAA,SAAAC,GAAS,OAAI,SAAAC,GAC1B,IAAMC,EAAUC,qBAAWP,GAE3B,OAAOQ,EAAAC,EAAAC,cAACN,EAADO,OAAAC,OAAA,GAAeN,EAAaD,MCMtBF,IAVF,SAAAE,GACX,OACEG,EAAAC,EAAAC,cAAA,OAAKG,UAAU,iBACbL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,2BACbL,EAAAC,EAAAC,cAAA,UAAQG,UAAU,cAAcC,QAAST,EAAMU,aAC7CP,EAAAC,EAAAC,cAAA,KAAGG,UAAU,kCCKNV,IAVC,SAAAE,GACd,OACEG,EAAAC,EAAAC,cAAA,OAAKG,UAAU,iBACbL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,WAAWC,QAAS,kBAAMT,EAAMW,WAAW,WAAxD,YAGAR,EAAAC,EAAAC,cAAA,KAAGG,UAAU,8BCPJI,EAAA,kBACbT,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBACbL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,8BACbL,EAAAC,EAAAC,cAAA,MAAIG,UAAU,aAAd,sBCkBWV,IAjBA,SAAAE,GACb,MAAmB,SAAfA,EAAMa,KAENV,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UACbL,EAAAC,EAAAC,cAACO,EAAD,MACAT,EAAAC,EAAAC,cAACS,EAAD,OAKFX,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UACbL,EAAAC,EAAAC,cAACO,EAAD,MACAT,EAAAC,EAAAC,cAACU,EAAD,gBCfOC,EAAA,SAAAhB,GAAS,IAAAiB,EACWf,qBAAWP,GAApCuB,EADcD,EACdC,SAAUP,EADIM,EACJN,WAClB,OACER,EAAAC,EAAAC,cAAA,UACEc,MAAO,CAAEC,gBAAiBF,GAC1BV,UAAU,qBACVa,KAAK,SACLZ,QAAS,kBAAME,EAAW,UAEzBX,EAAMsB,QCEEC,EAXC,WAAM,IAAAC,EACFC,mBAAS,CAAC,SAAU,SAAU,YAAzCC,EADapB,OAAAqB,EAAA,EAAArB,CAAAkB,EAAA,MAEpB,OACErB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,WACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,WACbL,EAAAC,EAAAC,cAAA,MAAIG,UAAU,mBAAd,WACCkB,EAAQE,IAAI,SAACC,EAAQC,GAAT,OAAiB3B,EAAAC,EAAAC,cAACW,EAAD,CAAQc,IAAKA,EAAKR,MAAOO,SCJhDE,QAAA,kBACb5B,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACbL,EAAAC,EAAAC,cAAC2B,EAAD,MACA7B,EAAAC,EAAAC,cAAC4B,EAAD,SCLWC,EADKtC,IAAMC,gBCEXsC,EAAA,SAAApC,GAAS,OAAI,SAAAC,GAC1B,IAAMC,EAAUC,qBAAWgC,GAE3B,OAAO/B,EAAAC,EAAAC,cAACN,EAADO,OAAAC,OAAA,GAAeN,EAAaD,MCgCtBmC,IAnCE,SAAAnC,GAAS,IAAAwB,EACEC,mBAAS,IADXW,EAAA9B,OAAAqB,EAAA,EAAArB,CAAAkB,EAAA,GACjBF,EADiBc,EAAA,GACVC,EADUD,EAAA,GAElBE,EAAY1C,IAAM2C,YAExBC,oBAAU,WACR,OAAOF,EAAUG,QAAQC,SACxB,IAYH,OACEvC,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACbL,EAAAC,EAAAC,cAAA,QAAMsC,SAVO,SAAAC,GACfA,EAAMC,iBACFvB,IACFtB,EAAM8C,QAAQxB,GACde,EAAS,OAOPlC,EAAAC,EAAAC,cAAA,SACE0C,KAAK,QACL1B,KAAK,OACL2B,IAAKV,EACL9B,UAAU,YACVyC,YAAY,yBACZ3B,MAAOA,EACP4B,SApBS,SAAAN,GAAK,OAAIP,EAASO,EAAMO,OAAO7B,cCoFnCa,IA5FE,SAAAnC,GAAS,IAAAoD,EACExD,IAAM6B,SAASzB,EAAMqD,KAAKC,MAD5BC,EAAAjD,OAAAqB,EAAA,EAAArB,CAAA8C,EAAA,GACjB9B,EADiBiC,EAAA,GACVlB,EADUkB,EAAA,GAAAC,EAkBpBxD,EALFqD,KAAQI,EAbcD,EAadC,GAAIH,EAbUE,EAaVF,KAAMI,EAbIF,EAaJE,KAAMC,EAbFH,EAaEG,SACxBC,EAIE5D,EAJF4D,aACAC,EAGE7D,EAHF6D,WACAC,EAEE9D,EAFF8D,SACAC,EACE/D,EADF+D,UAGF,OAAOJ,EACLxD,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACbL,EAAAC,EAAAC,cAAA,QAAMsC,SAnBG,SAAAC,GACfA,EAAMC,iBACFvB,GACFtB,EAAMgE,aAAa1C,EAAOtB,EAAMqD,KAAKI,MAiB/BtD,EAAAC,EAAAC,cAAA,SACE0C,KAAK,QACL1B,KAAK,OACLb,UAAU,aACVyD,aAAc3C,EACd4B,SA3BK,SAAAN,GAAK,OAAIP,EAASO,EAAMO,OAAO7B,aAgC5CnB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,mBACbL,EAAAC,EAAAC,cAAA,UACEG,UAAU,kBACVa,KAAK,SACLZ,QAAS,kBAAMsD,EAAUN,KAEzBtD,EAAAC,EAAAC,cAAA,KAAGG,UAAU,yBAKnBL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,YAAYC,QAAS,kBAAMmD,EAAaH,EAAIC,KACzDvD,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACbL,EAAAC,EAAAC,cAAA,UAAQG,UAAU,kBAAkBa,KAAK,UACvClB,EAAAC,EAAAC,cAAA,KACEG,UAAU,qBACVW,MAAO,CACL+C,MAAOR,EAAO,QAAU,QAKhCvD,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACbL,EAAAC,EAAAC,cAAA,OACEG,UAAU,aACVW,MAAO,CACLgD,eAAgBT,EAAO,uBAAyB,GAChDQ,MAAOR,EAAO,OAAS,KAGxBJ,KAIPnD,EAAAC,EAAAC,cAAA,OAAKG,UAAU,mBACbL,EAAAC,EAAAC,cAAA,UACEG,UAAU,kBACVa,KAAK,SACLZ,QAAS,kBAAMqD,EAASL,KAExBtD,EAAAC,EAAAC,cAAA,KAAGG,UAAU,4BAEfL,EAAAC,EAAAC,cAAA,UACEG,UAAU,6BACVa,KAAK,SACLZ,QAAS,kBACP2D,OAAOC,QAAQ,+CACfR,EAAWJ,KAEbtD,EAAAC,EAAAC,cAAA,KAAGG,UAAU,2BChDR2B,IApCE,SAAAnC,GACf,OACEG,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACbL,EAAAC,EAAAC,cAAA,MAAIG,UAAU,gBACZL,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACEG,UAA4B,QAAjBR,EAAMsE,OAAmB,SAAW,GAC/C7D,QAAS,kBAAMT,EAAMuE,iBAAiB,SAFxC,aAOFpE,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACEG,UAA4B,WAAjBR,EAAMsE,OAAsB,SAAW,GAClD7D,QAAS,kBAAMT,EAAMuE,iBAAiB,YAFxC,WAOFpE,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACEG,UAA4B,aAAjBR,EAAMsE,OAAwB,SAAW,GACpD7D,QAAS,kBAAMT,EAAMuE,iBAAiB,cAFxC,eAQJpE,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACZR,EAAMwE,MAAM5C,IAAI,SAAA6C,GAAC,OAAItE,EAAAC,EAAAC,cAACqE,EAAD,CAAU5C,IAAK2C,EAAEhB,GAAIJ,KAAMoB,UC/B1CE,EAAA,kBACbxE,EAAAC,EAAAC,cAAA,OAAKG,UAAU,WACbL,EAAAC,EAAAC,cAACuE,EAAD,MACAzE,EAAAC,EAAAC,cAACwE,EAAD,QCFWC,EAAA,kBACb3E,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACbL,EAAAC,EAAAC,cAAC2B,EAAD,MACA7B,EAAAC,EAAAC,cAACsE,EAAD,8DCNW,SAASI,IACtB,OAAO5E,EAAAC,EAAAC,cAAA,OAAKG,UAAU,WCGxB,IAAMwE,EAAM,wDAEGC,EAAA,SAAAjF,GAAS,IAAAwB,EACGC,mBAAS,IADZW,EAAA9B,OAAAqB,EAAA,EAAArB,CAAAkB,EAAA,GACfgD,EADepC,EAAA,GACR8C,EADQ9C,EAAA,GAAA+C,EAEY1D,mBAAS,OAFrB2D,EAAA9E,OAAAqB,EAAA,EAAArB,CAAA6E,EAAA,GAEfE,EAFeD,EAAA,GAEHE,EAFGF,EAAA,GAAAG,EAGU9D,oBAAS,GAHnB+D,EAAAlF,OAAAqB,EAAA,EAAArB,CAAAiF,EAAA,GAGfE,EAHeD,EAAA,GAGJE,EAHIF,EAAA,GAKhB5B,EAAY,eAAA+B,EAAArF,OAAAsF,EAAA,EAAAtF,CAAAuF,EAAAzF,EAAA0F,KAAG,SAAAC,EAAOtC,EAAIuC,GAAX,IAAAC,EAAA,OAAAJ,EAAAzF,EAAA8F,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACDC,IAAMC,IAAN,GAAAC,OAAaxB,EAAb,KAAAwB,OAAoB/C,GAAM,CAC1CC,MAAOsC,IAFU,OACbC,EADaE,EAAAM,KAInBvB,EACEV,EAAM5C,IAAI,SAAAyB,GACR,OAAIA,EAAKI,KAAOwC,EAAIS,KAAKjD,GAChBnD,OAAAqG,EAAA,EAAArG,CAAA,GACF+C,EADL,CAEEK,MAAOL,EAAKK,OAGPL,KAZM,wBAAA8C,EAAAS,SAAAb,MAAH,gBAAAc,EAAAC,GAAA,OAAAnB,EAAAoB,MAAAC,KAAAC,YAAA,GAkBZpD,EAAU,eAAAqD,EAAA5G,OAAAsF,EAAA,EAAAtF,CAAAuF,EAAAzF,EAAA0F,KAAG,SAAAqB,EAAM1D,GAAN,IAAAwC,EAAAmB,EAAA,OAAAvB,EAAAzF,EAAA8F,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,cAAAgB,EAAAhB,KAAA,EACCC,IAAMgB,OAAN,GAAAd,OAAgBxB,EAAhB,KAAAwB,OAAuB/C,IADxB,OACXwC,EADWoB,EAAAZ,KAEXW,EAAgB5C,EAAMF,OAAO,SAAAiD,GAAI,OAAIA,EAAK9D,KAAOwC,EAAIS,KAAKjD,KAChEyB,EAAQkC,GAHS,wBAAAC,EAAAT,SAAAO,MAAH,gBAAAK,GAAA,OAAAN,EAAAH,MAAAC,KAAAC,YAAA,GAqBVjD,EAAY,eAAAyD,EAAAnH,OAAAsF,EAAA,EAAAtF,CAAAuF,EAAAzF,EAAA0F,KAAG,SAAA4B,EAAOpE,EAAMG,GAAb,IAAAwC,EAAAS,EAAArD,EAAA,OAAAwC,EAAAzF,EAAA8F,KAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,cAAAsB,EAAAtB,KAAA,EACDC,IAAMC,IAAN,GAAAC,OAAaxB,EAAb,KAAAwB,OAAoB/C,GAAM,CAC1CH,SAFiB,OACb2C,EADa0B,EAAAlB,KAIbC,EAAOT,EAAIS,KACXrD,EAAOmB,EAAM5C,IAAI,SAAAyB,GACrB,OAAIA,EAAKI,KAAOiD,EAAKjD,GACZnD,OAAAqG,EAAA,EAAArG,CAAA,GACF+C,EADL,CAEEC,KAAMoD,EAAKpD,KACXK,UAAU,IAGLN,IAGX6B,EAAQ7B,GAhBW,wBAAAsE,EAAAf,SAAAc,MAAH,gBAAAE,EAAAC,GAAA,OAAAJ,EAAAV,MAAAC,KAAAC,YAAA,GAkClBzE,oBAAU,WAAM,SAAAsF,IAAA,OAAAA,EAAAxH,OAAAsF,EAAA,EAAAtF,CAAAuF,EAAAzF,EAAA0F,KACd,SAAAiC,IAAA,IAAA9B,EAAAS,EAAA,OAAAb,EAAAzF,EAAA8F,KAAA,SAAA8B,GAAA,cAAAA,EAAA5B,KAAA4B,EAAA3B,MAAA,cACEX,GAAW,GADbsC,EAAA3B,KAAA,EAEoBC,IAAM2B,IAAIjD,GAF9B,OAEQiB,EAFR+B,EAAAvB,MAGQC,EAAOT,EAAIS,MACZwB,KAAK,SAAC9H,EAAG+H,GACZ,OAAOA,EAAE1E,GAAKrD,EAAEqD,KAElByB,EAAQwB,GACRhB,GAAW,GARb,wBAAAsC,EAAApB,SAAAmB,OADchB,MAAAC,KAAAC,YAAA,WAAAa,EAAAf,MAAAC,KAAAC,WAWdmB,IACC,IAEH,IAAMtF,EAAO,eAAAuF,EAAA/H,OAAAsF,EAAA,EAAAtF,CAAAuF,EAAAzF,EAAA0F,KAAG,SAAAwC,EAAMhF,GAAN,IAAA2C,EAAAS,EAAA,OAAAb,EAAAzF,EAAA8F,KAAA,SAAAqC,GAAA,cAAAA,EAAAnC,KAAAmC,EAAAlC,MAAA,WACV/C,EADU,CAAAiF,EAAAlC,KAAA,eAAAkC,EAAAlC,KAAA,EAEMC,IAAMkC,KAAKxD,EAAK,CAChC1B,OACAI,MAAM,EACNC,UAAU,IALA,OAENsC,EAFMsC,EAAA9B,KAONC,EAAOT,EAAIS,KACjBxB,EAAO,CAAEwB,GAAFF,OAAAlG,OAAAmI,EAAA,EAAAnI,CAAWkE,KARN,wBAAA+D,EAAA3B,SAAA0B,MAAH,gBAAAI,GAAA,OAAAL,EAAAtB,MAAAC,KAAAC,YAAA,GA2Bb,OACE9G,EAAAC,EAAAC,cAACsI,EAAYC,SAAb,CACEtH,MAAO,CACLkD,MAdgB,WACpB,OAAQa,GACN,IAAK,SACH,OAAOb,EAAMF,OAAO,SAAAG,GAAC,OAAKA,EAAEf,OAC9B,IAAK,WACH,OAAOc,EAAMF,OAAO,SAAAG,GAAC,OAAIA,EAAEf,OAC7B,QACE,OAAOc,GAOAqE,GACPvE,OAAQe,EACRzB,aAAcA,EACdC,WAAYA,EACZC,SAjGW,SAAAL,GACfyB,EACEV,EAAM5C,IAAI,SAAAyB,GACR,OAAIA,EAAKI,KAAOA,EACPnD,OAAAqG,EAAA,EAAArG,CAAA,GACF+C,EADL,CAEEM,UAAU,IAGLN,MAyFTW,aAAcA,EACdD,UAjEY,SAAAN,GAChByB,EACEV,EAAM5C,IAAI,SAAAyB,GACR,OAAIA,EAAKI,KAAOA,EACPnD,OAAAqG,EAAA,EAAArG,CAAA,GACF+C,EADL,CAEEM,UAAU,IAGLN,MAyDTP,QAASA,EACTyB,iBA1BmB,SAAAuE,GACvBxD,EAAYwD,MA4BTrD,EAAYtF,EAAAC,EAAAC,cAAC0E,EAAD,MAAa/E,EAAM+I,WCjIvBjJ,IAJH,SAAAE,GAAK,OACfG,EAAAC,EAAAC,cAAC4E,EAAD,KAA8B,SAAfjF,EAAMa,KAAkBV,EAAAC,EAAAC,cAACyE,EAAD,MAAW3E,EAAAC,EAAAC,cAAC0B,EAAD,SCGhCiH,QACW,cAA7B5E,OAAO6E,SAASC,UAEe,UAA7B9E,OAAO6E,SAASC,UAEhB9E,OAAO6E,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACPlJ,EAAAC,EAAAC,cCJa,SAAAL,GAAS,IAAAwB,EACGC,mBAAS,IADZW,EAAA9B,OAAAqB,EAAA,EAAArB,CAAAkB,EAAA,GACfX,EADeuB,EAAA,GACTC,EADSD,EAAA,GAAA+C,EAEU1D,mBAAS,IAFnB2D,EAAA9E,OAAAqB,EAAA,EAAArB,CAAA6E,EAAA,GAEfjE,EAFekE,EAAA,GAELkE,EAFKlE,EAAA,GAAAG,EAGS9D,oBAAS,GAHlB+D,EAAAlF,OAAAqB,EAAA,EAAArB,CAAAiF,EAAA,GAGfgE,EAHe/D,EAAA,GAGHgE,EAHGhE,EAAA,GAWtB,OACErF,EAAAC,EAAAC,cAACoJ,EAAab,SAAd,CACEtH,MAAO,CACLT,OACAK,WACAR,YAXc,WAClB8I,GAAUD,GAEVD,EADgBC,EAAa,QAAU,UAUnC5I,WAPa,SAAAE,GAAI,OAAIwB,EAASxB,MAU/Bb,EAAM+I,WDhBX,KACE5I,EAAAC,EAAAC,cAACqJ,EAAD,OAEFC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.e00b6239.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst ColorContext = React.createContext();\r\nexport default ColorContext;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport ColorContext from \"../context/ColorContext\";\r\n\r\nexport default Component => props => {\r\n  const context = useContext(ColorContext);\r\n\r\n  return <Component {...context} {...props} />;\r\n};\r\n","import React from \"react\";\r\nimport withApp from \"./hoc/withApp\";\r\n\r\nconst Logo = props => {\r\n  return (\r\n    <div className=\"header-action\">\r\n      <i className=\"fab fa-github icon-git\" />\r\n      <button className=\"changeColor\" onClick={props.changeColor}>\r\n        <i className=\"fas fa-adjust icon_change\" />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nexport default withApp(Logo);\r\n","import React from \"react\";\r\nimport withApp from \"./hoc/withApp\";\r\n\r\nconst SignOut = props => {\r\n  return (\r\n    <div className=\"header-action\">\r\n      <a className=\"sign-out\" onClick={() => props.changePage(\"login\")}>\r\n        Sign out\r\n      </a>\r\n      <i className=\"fab fa-github icon-git\" />\r\n    </div>\r\n  );\r\n};\r\nexport default withApp(SignOut);\r\n","import React from \"react\";\r\n\r\nexport default () => (\r\n  <div className=\"header-title\">\r\n    <i className=\"far fa-circle icon-circle\" />\r\n    <h4 className=\"text-todo\">Todo React Redux</h4>\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport Logo from \"./Logo\";\r\nimport SignOut from \"./SignOut\";\r\nimport HeaderTitle from \"./HeaderTitle\";\r\nimport withApp from \"./hoc/withApp\";\r\n\r\nconst Header = props => {\r\n  if (props.page === \"home\") {\r\n    return (\r\n      <div className=\"header\">\r\n        <HeaderTitle />\r\n        <SignOut />\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"header\">\r\n        <HeaderTitle />\r\n        <Logo />\r\n      </div>\r\n    );\r\n  }\r\n};\r\nexport default withApp(Header);\r\n","import React, { useContext } from \"react\";\r\nimport ColorContext from \"./context/ColorContext\";\r\n\r\nexport default props => {\r\n  const { colorBtn, changePage } = useContext(ColorContext);\r\n  return (\r\n    <button\r\n      style={{ backgroundColor: colorBtn }}\r\n      className=\"btn sign-in-button\"\r\n      type=\"button\"\r\n      onClick={() => changePage(\"home\")}\r\n    >\r\n      {props.value}\r\n    </button>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport Button from \"../components/Button\";\r\n\r\nconst Content = () => {\r\n  const [socials] = useState([\"GitHub\", \"Google\", \"Twitter\"]);\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"sign-in\">\r\n        <h2 className=\"sign-in-heading\">Sign in</h2>\r\n        {socials.map((social, key) => <Button key={key} value={social} />)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Content;\r\n","import React from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport Content from \"../components/Content\";\r\nimport \"./Login.css\";\r\n\r\nexport default () => (\r\n  <div className=\"container\">\r\n    <Header />\r\n    <Content />\r\n  </div>\r\n);\r\n","import React from \"react\";\r\n\r\nconst TodoContext = React.createContext();\r\nexport default TodoContext;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport TodoContext from \"../context/TodoContext\";\r\n\r\nexport default Component => props => {\r\n  const context = useContext(TodoContext);\r\n\r\n  return <Component {...context} {...props} />;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport withTodo from \"../hoc/withTodo\";\r\n\r\nconst TodoForm = props => {\r\n  const [value, setValue] = useState(\"\");\r\n  const textInput = React.createRef();\r\n  // useEffect should enter an empty array to not run during process\r\n  useEffect(() => {\r\n    return textInput.current.focus();\r\n  }, []);\r\n\r\n  const onChange = event => setValue(event.target.value);\r\n\r\n  const onSubmit = event => {\r\n    event.preventDefault();\r\n    if (value) {\r\n      props.addTodo(value);\r\n      setValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"input\">\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          name=\"value\"\r\n          type=\"text\"\r\n          ref={textInput}\r\n          className=\"task-form\"\r\n          placeholder=\"What needs to be done?\"\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withTodo(TodoForm);\r\n","import React from \"react\";\r\n// import PropTypes from \"prop-types\";\r\nimport withTodo from \"../hoc/withTodo\";\r\n\r\nconst TodoItem = props => {\r\n  const [value, setValue] = React.useState(props.todo.text);\r\n\r\n  const onChange = event => setValue(event.target.value);\r\n\r\n  const onSubmit = event => {\r\n    event.preventDefault();\r\n    if (value) {\r\n      props.editTodoList(value, props.todo.id);\r\n    }\r\n  };\r\n\r\n  const {\r\n    todo: { id, text, done, isEdited },\r\n    markTodoDone,\r\n    removeTodo,\r\n    editTodo,\r\n    closeTodo\r\n  } = props;\r\n\r\n  return isEdited ? (\r\n    <div className=\"task-item\">\r\n      <div className=\"cell-lelf\">\r\n        <div className=\"cell title\">\r\n          <form onSubmit={onSubmit}>\r\n            <input\r\n              name=\"value\"\r\n              type=\"text\"\r\n              className=\"task-title\"\r\n              defaultValue={value}\r\n              onChange={onChange}\r\n            />\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <div className=\"cell cell-right\">\r\n        <button\r\n          className=\"btn task-button\"\r\n          type=\"button\"\r\n          onClick={() => closeTodo(id)}\r\n        >\r\n          <i className=\"fas fa-times icon\" />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <div className=\"task-item\">\r\n      <div className=\"cell-lelf\" onClick={() => markTodoDone(id, done)}>\r\n        <div className=\"cell\">\r\n          <button className=\"btn task-button\" type=\"button\">\r\n            <i\r\n              className=\"fas fa-check icon \"\r\n              style={{\r\n                color: done ? \"green\" : \"\"\r\n              }}\r\n            />\r\n          </button>\r\n        </div>\r\n        <div className=\"cell title\">\r\n          <div\r\n            className=\"task-title\"\r\n            style={{\r\n              textDecoration: done ? \"line-through #85bf6b\" : \"\",\r\n              color: done ? \"#555\" : \"\"\r\n            }}\r\n          >\r\n            {text}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"cell cell-right\">\r\n        <button\r\n          className=\"btn task-button\"\r\n          type=\"button\"\r\n          onClick={() => editTodo(id)}\r\n        >\r\n          <i className=\"fas fa-pencil-alt icon\" />\r\n        </button>\r\n        <button\r\n          className=\"btn task-button btn-delete\"\r\n          type=\"button\"\r\n          onClick={() =>\r\n            window.confirm(\"Are you sure you want to delete this item?\") &&\r\n            removeTodo(id)}\r\n        >\r\n          <i className=\"fas fa-trash icon\" />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withTodo(TodoItem);\r\n","import React from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\n// import ErrorBoundary from \"../ErrorBoundary\";\r\nimport withTodo from \"../hoc/withTodo\";\r\n\r\nconst TodoList = props => {\r\n  return (\r\n    <div className=\"list\">\r\n      <ul className=\"task-filters\">\r\n        <li>\r\n          <a\r\n            className={props.filter === \"all\" ? \"active\" : \"\"}\r\n            onClick={() => props.updateTodoToShow(\"all\")}\r\n          >\r\n            View All\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a\r\n            className={props.filter === \"active\" ? \"active\" : \"\"}\r\n            onClick={() => props.updateTodoToShow(\"active\")}\r\n          >\r\n            Active\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a\r\n            className={props.filter === \"complete\" ? \"active\" : \"\"}\r\n            onClick={() => props.updateTodoToShow(\"complete\")}\r\n          >\r\n            Completed\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      <div className=\"task-list\">\r\n        {props.todos.map(t => <TodoItem key={t.id} todo={t} />)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withTodo(TodoList);\r\n","import React from \"react\";\r\nimport TodoForm from \"./Todo/TodoForm\";\r\nimport TodoList from \"./Todo/TodoList\";\r\n\r\nexport default () => (\r\n  <div className=\"content\">\r\n    <TodoForm />\r\n    <TodoList />\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport ContentTodolist from \"../components/ContentTodolist\";\r\nimport \"./Login.css\";\r\n\r\nexport default () => (\r\n  <div className=\"container\">\r\n    <Header />\r\n    <ContentTodolist />\r\n  </div>\r\n);\r\n","import React from \"react\";\r\n\r\nexport default function Loader() {\r\n  return <div className=\"loader\" />;\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport TodoContext from \"./TodoContext\";\r\nimport Loader from \"../Loader\";\r\n\r\nconst API = \"https://5ce4abbbc1ee360014725c91.mockapi.io/api/todos\";\r\n\r\nexport default props => {\r\n  const [todos, setTodo] = useState([]);\r\n  const [todoToShow, setTodoShow] = useState(\"all\");\r\n  const [isLoading, setLoading] = useState(true);\r\n\r\n  const markTodoDone = async (id, doneTodo) => {\r\n    const res = await axios.put(`${API}/${id}`, {\r\n      done: !doneTodo\r\n    });\r\n    setTodo(\r\n      todos.map(todo => {\r\n        if (todo.id === res.data.id) {\r\n          return {\r\n            ...todo,\r\n            done: !todo.done\r\n          };\r\n        } else {\r\n          return todo;\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  const removeTodo = async id => {\r\n    const res = await axios.delete(`${API}/${id}`);\r\n    const filteredArray = todos.filter(item => item.id !== res.data.id);\r\n    setTodo(filteredArray);\r\n  };\r\n\r\n  const editTodo = id => {\r\n    setTodo(\r\n      todos.map(todo => {\r\n        if (todo.id === id) {\r\n          return {\r\n            ...todo,\r\n            isEdited: true\r\n          };\r\n        } else {\r\n          return todo;\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  const editTodoList = async (text, id) => {\r\n    const res = await axios.put(`${API}/${id}`, {\r\n      text\r\n    });\r\n    const data = res.data;\r\n    const todo = todos.map(todo => {\r\n      if (todo.id === data.id) {\r\n        return {\r\n          ...todo,\r\n          text: data.text,\r\n          isEdited: false\r\n        };\r\n      } else {\r\n        return todo;\r\n      }\r\n    });\r\n    setTodo(todo);\r\n  };\r\n\r\n  const closeTodo = id => {\r\n    setTodo(\r\n      todos.map(todo => {\r\n        if (todo.id === id) {\r\n          return {\r\n            ...todo,\r\n            isEdited: false\r\n          };\r\n        } else {\r\n          return todo;\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      setLoading(true);\r\n      const res = await axios.get(API);\r\n      const data = res.data;\r\n      data.sort((a, b) => {\r\n        return b.id - a.id;\r\n      });\r\n      setTodo(data);\r\n      setLoading(false);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  const addTodo = async text => {\r\n    if (text) {\r\n      const res = await axios.post(API, {\r\n        text,\r\n        done: false,\r\n        isEdited: false\r\n      });\r\n      const data = res.data;\r\n      setTodo([data, ...todos]);\r\n    }\r\n  };\r\n\r\n  const updateTodoToShow = s => {\r\n    setTodoShow(s);\r\n  };\r\n\r\n  const getFilterTodo = () => {\r\n    switch (todoToShow) {\r\n      case \"active\":\r\n        return todos.filter(t => !t.done);\r\n      case \"complete\":\r\n        return todos.filter(t => t.done);\r\n      default:\r\n        return todos;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TodoContext.Provider\r\n      value={{\r\n        todos: getFilterTodo(),\r\n        filter: todoToShow,\r\n        markTodoDone: markTodoDone,\r\n        removeTodo: removeTodo,\r\n        editTodo: editTodo,\r\n        editTodoList: editTodoList,\r\n        closeTodo: closeTodo,\r\n        addTodo: addTodo,\r\n        updateTodoToShow: updateTodoToShow\r\n      }}\r\n    >\r\n      {isLoading ? <Loader /> : props.children}\r\n    </TodoContext.Provider>\r\n  );\r\n};\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Login from \"./views/Login\";\nimport Home from \"./views/Home\";\n\nimport TodoProvider from \"./components/context/TodoProvider\";\nimport withApp from \"./components/hoc/withApp\";\n\nconst App = props => (\n  <TodoProvider>{props.page === \"home\" ? <Home /> : <Login />}</TodoProvider>\n);\n\nexport default withApp(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport AppProvider from \"./components/context/AppProvider\";\n\nReactDOM.render(\n  <AppProvider>\n    <App />\n  </AppProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useState } from \"react\";\r\n\r\nimport ColorContext from \"./ColorContext\";\r\n\r\nexport default props => {\r\n  const [page, setValue] = useState(\"\");\r\n  const [colorBtn, setcolorBtn] = useState(\"\");\r\n  const [colorBlack, setColor] = useState(true);\r\n\r\n  const changeColor = () => {\r\n    setColor(!colorBlack);\r\n    const bgColor = colorBlack ? \"black\" : \"white\";\r\n    setcolorBtn(bgColor);\r\n  };\r\n  const changePage = page => setValue(page);\r\n  return (\r\n    <ColorContext.Provider\r\n      value={{\r\n        page,\r\n        colorBtn,\r\n        changeColor,\r\n        changePage\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ColorContext.Provider>\r\n  );\r\n};\r\n"],"sourceRoot":""}